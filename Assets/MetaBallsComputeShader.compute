#pragma kernel CSMain

struct MetaBall{
    float2 pos;
    float2 vel;
    float r;
    float3 color;
};

RWTexture2D<float4> Result;
RWStructuredBuffer<MetaBall> metaBalls;

float surface;
int metaBallCount;

bool linearMode;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float total_value = 0;
    float4 total_color = float4(0, 0, 0, 1);

    for (int i = 0; i < metaBallCount; i++){
        MetaBall ball = metaBalls[i];
        float value = ball.r / sqrt(pow((int)id.x - ball.pos.x, 2) + pow((int)id.y - ball.pos.y, 2));
        total_value += value;
        float colorX = ball.color.x * value;
        float colorY = ball.color.y * value;
        float colorZ = ball.color.z * value;
        if (linearMode){
            colorX = clamp(colorX, 0, ball.color.x);
            colorY = clamp(colorY, 0, ball.color.y);
            colorZ = clamp(colorZ, 0, ball.color.z);
        }
        total_color += float4(colorX, colorY, colorZ, 0);      
    }
    if (total_value >= surface){
        Result[id.xy] = total_color;
    }
}
